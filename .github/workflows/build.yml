on:
  push:
    branches:
    - master

jobs:
  download-sources:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/cache@v2
      id: download_sources
      with:
        path: downloaded
        key: v1-sources-20.0.4
    - name: Download
      if: steps.download_sources.outputs.cache-hit != 'true'
      run: |
        mkdir -p downloaded
        cd downloaded
        rm -f *
        wget https://media.codeweavers.com/pub/crossover/source/crossover-sources-20.0.4.tar.gz
    - uses: actions/upload-artifact@v2
      with:
        name: sources
        path: downloaded/crossover-sources-20.0.4.tar.gz
  build-llvm:
    runs-on: macOS-latest
    needs:
    - download-sources
    steps:
    - uses: actions/checkout@master
    - uses: actions/cache@v2
      id: builded_llvm
      with:
        path: llvm.tar.gz
        key: v1-llvm-20.0.4
    - uses: actions/download-artifact@v2
      if: steps.builded_llvm.outputs.cache-hit != 'true'
      with:
        name: sources
    - run: tar xf crossover-sources-20.0.4.tar.gz
      if: steps.builded_llvm.outputs.cache-hit != 'true'
    - name: Build
      if: steps.builded_llvm.outputs.cache-hit != 'true'
      run: |
        sudo mkdir -p /opt/cwbgh/llvm
        sudo chown -R $(whoami) /opt/cwbgh
        cd sources/clang/llvm
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=/opt/cwbgh/llvm -DCMAKE_BUILD_TYPE=MinSizeRel ..
        make -j4
        make install
    - name: Archive
      if: steps.builded_llvm.outputs.cache-hit != 'true'
      run: |
        tar czf llvm.tar.gz /opt/cwbgh/llvm
    - uses: actions/upload-artifact@v2
      with:
        name: llvm
        path: llvm.tar.gz
  build-clang:
    runs-on: macOS-latest
    needs:
    - build-llvm
    steps:
    - uses: actions/checkout@master
    - uses: actions/cache@v2
      id: builded_clang
      with:
        path: clang.tar.gz
        key: v1-clang-20.0.4
    - uses: actions/download-artifact@v2
      if: steps.builded_clang.outputs.cache-hit != 'true'
      with:
        name: sources
    - uses: actions/download-artifact@v2
      if: steps.builded_clang.outputs.cache-hit != 'true'
      with:
        name: llvm
    - run: tar xf crossover-sources-20.0.4.tar.gz
      if: steps.builded_clang.outputs.cache-hit != 'true'
    - name: Extract LLVM
      if: steps.builded_clang.outputs.cache-hit != 'true'
      run: |
        sudo mkdir -p /opt/cwbgh/llvm
        sudo chown -R $(whoami) /opt/cwbgh
        LLVM_TAR_GZ=$(pwd)/llvm.tar.gz
        cd /
        tar xf $LLVM_TAR_GZ
    - name: Build
      if: steps.builded_clang.outputs.cache-hit != 'true'
      run: |
        export PATH="/opt/cwbgh/llvm/bin:$PATH"
        cd sources/clang/clang
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=/opt/cwbgh/llvm -DCMAKE_BUILD_TYPE=MinSizeRel ..
        make -j4
        make install
    - name: Archive
      if: steps.builded_clang.outputs.cache-hit != 'true'
      run: |
        tar czf clang.tar.gz /opt/cwbgh/llvm
    - uses: actions/upload-artifact@v2
      with:
        name: clang
        path: clang.tar.gz
  build-wine:
    runs-on: macOS-latest
    needs:
    - build-clang
    steps:
    - uses: actions/checkout@master
    - run: brew install freetype bison mingw-w64
    - uses: actions/cache@v2
      id: builded_wine
      with:
        path: wine.tar.gz
        key: v1-wine-with64-20.0.4
    - uses: actions/download-artifact@v2
      if: steps.builded_wine.outputs.cache-hit != 'true'
      with:
        name: sources
    - uses: actions/download-artifact@v2
      if: steps.builded_wine.outputs.cache-hit != 'true'
      with:
        name: clang
    - run: tar xf crossover-sources-20.0.4.tar.gz
      if: steps.builded_wine.outputs.cache-hit != 'true'
    - run: cp ./distversion.h ./sources/wine/include/
      if: steps.builded_wine.outputs.cache-hit != 'true'
    - name: Extract LLVM
      if: steps.builded_wine.outputs.cache-hit != 'true'
      run: |
        sudo mkdir -p /opt/cwbgh/llvm
        sudo chown -R $(whoami) /opt/cwbgh
        sudo mkdir -p /opt/crossover-wine
        sudo chown -R $(whoami) /opt/crossover-wine
        LLVM_TAR_GZ=$(pwd)/clang.tar.gz
        cd /
        tar xf $LLVM_TAR_GZ
    - name: Build
      if: steps.builded_wine.outputs.cache-hit != 'true'
      run: |
        export PATH="/opt/cwbgh/llvm/bin:/usr/local/opt/bison/bin:$PATH"
        export CROSSCFLAGS="-g -O2 -fcommon"
        export CC="clang"
        export CXX="clang++"
        export MACOSX_DEPLOYMENT_TARGET=10.14
        cd sources/wine
        # Build Wine64
        mkdir build64
        cd build64
        ../configure --enable-win64 --disable-winedbg --disable-tests --disable-winevulkan --without-x --without-vulkan --disable-mscms --prefix=/opt/crossover-wine
        make -j4
        # Build Wine32
        cd ../
        mkdir build32
        cd build32
        ../configure --enable-win32on64 --with-wine64=../build64 --disable-winedbg --disable-tests --disable-winevulkan --without-x --without-vulkan --disable-mscms --prefix=/opt/crossover-wine
        make -j4
        make install
    - name: Archive
      if: steps.builded_wine.outputs.cache-hit != 'true'
      run: |
        tar czf wine.tar.gz /opt/crossover-wine
    - uses: actions/upload-artifact@v2
      with:
        name: wine
        path: wine.tar.gz
